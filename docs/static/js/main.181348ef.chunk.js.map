{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","arguments","length","undefined","type","calendar","action","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","values","setValues","useState","_ref","target","name","value","reset","baseUrl","process","fetchSinToken","endpoint","data","method","url","concat","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventStartLoading","async","resp","end","moment","toDate","start","prepareEvents","json","eventos","dispatch","eventLoaded","error","console","log","checkingFinish","login","user","startLogout","clear","logout","LoginScreen","useDispatch","formLoginValues","handleLoginInputChange","lEmail","lPassword","formRegisterValues","handleRegisterInputChange","rName","rEmail","rPassword1","rPassword2","_jsx","className","children","_jsxs","onSubmit","startLogin","email","password","preventDefault","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","startRegister","Navbar","useSelector","Online","Offline","onClick","handleLogout","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","getState","evento","_id","eventStartAddNew","DateTimePicker","minDate","autoComplete","rows","AddNewFab","handleClickNew","DeleteEventFab","handleDelete","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","Calendar","startAccessor","endAccessor","eventPropGetter","eventStyleGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","component","Component","rest","Route","props","Redirect","to","PrivateRoute","AppRouter","Router","Switch","exact","path","CalendarApp","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.181348ef.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    \r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    \r\n    evetStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from '../types/types';\r\n// {\r\n//     id: 'askdjhaksdjas',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n    \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\n\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from './events';\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nimport { Offline, Online } from 'react-detect-offline'\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <Online>\r\n                <span className=\"text-success\">Online</span>\r\n            </Online>\r\n            <Offline>\r\n                <span className=\"text-danger\">Offline - Peticiones serán guardadas</span>\r\n            </Offline>\r\n            \r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            \r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n\r\n\r\n            <AddNewFab />\r\n\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n            \r\n\r\n            <CalendarModal />\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\n  \r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />   \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <CalendarApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}